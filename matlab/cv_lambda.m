function [ lambda ] = cv_lambda(X,sigma,nystrom_rank)
%CV_LAMBDA Runs 5-fold cross-validation to find a suitable lambda. Lambdas
%are chosen based on the estimated spectrum generated by the Nystrom
%approximation. 

%% Set initial values
FOLDS = 5;
[N,d] = size(X);
nystrom_m = nystrom_rank*2;
sflag = 1; %determines whether we need to subsample in each section
if nystrom_rank > 4 * N/FOLDS
    sflag = 0;
end
    
%% Split into sections
fold_sizes = zeros(FOLDS,1);
bigs = mod(N,FOLDS);
fold_sizes(1:bigs) = ceil(N/FOLDS);
fold_sizes(bigs+1:end) = floor(N/FOLDS);
fold_ends = cumsum(fold_sizes);
shuffled = randperm(N);
sample = 1:nystrom_m;
sample = sample - bigs;
spectrum = zeros(nystrom_rank,1);

%% Specify lambda choices
for i = 1:FOLDS
    if i <= bigs
        size = bigs;
    else
        size = bigs -1;
    end
    
    sample = sample + size;
    curr_idx = diff(1:N,sample);
    curr_idx = shuffled(curr_idx);
    
    curr_sample = createsample(X(curr_idx,:),size,[],'random');
    [~, L] = nystromeig(X(curr_idx,:),sigma,curr_sample,nystrom_rank,0);
    spectrum = spectrum + L;
end
spectrum = spectrum./FOLDS;

sample = 1:nystrom_m;
sample = sample - bigs;
%% Choose ideal lambda
for i = 1:FOLDS
    
    
    
end


end

